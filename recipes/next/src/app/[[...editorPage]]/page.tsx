/**
 * This file implements a catch-all route that renders the user-facing pages
 * generated by Brizy. For any route visited (with exception of other hardcoded
 * pages in /app), it will check your database (via `getPage`) for a Brizy page
 * and render it using <Preview>.
 *
 * All routes produced by this page are statically rendered using incremental
 * static site generation. After the first visit, the page will be cached as
 * a static file. Subsequent visits will receive the cache. Publishing a page
 * will invalidate the cache as the page is written in /api/editor/route.ts
 */

import { Metadata } from "next";
import { getPage } from "@/lib/getPage";
import { getProject } from "@/lib/getProject";
import { Client } from "./client";
import { MissingPage } from "@/components/MissingPage";

export async function generateMetadata({ params }: { params: Promise<{ editorPage: string[] }> }): Promise<Metadata> {
  const { editorPage = [] } = await params;
  return {
    title: `Brizy: ${editorPage.join()}`,
  };
}

export default async function Page({ params }: { params: Promise<{ editorPage: string[] }> }) {
  const { editorPage = [] } = await params;
  const path = `/${editorPage.join("/")}`;
  const pageData = getPage(path);
  const projectData = getProject();

  if (!pageData || !projectData) {
    return <MissingPage />;
  }

  return <Client pageData={pageData} projectData={projectData} />;
}

// Force Next.js to produce static pages: https://nextjs.org/docs/app/api-reference/file-conventions/route-segment-config#dynamic
// Delete this if you need dynamic rendering, such as access to headers or cookies
export const dynamic = "force-static";
